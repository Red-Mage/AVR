  TODO:
 - make full requirements list
 - build VRC
   - rewrite VRC build script
   - build docker .env script
   - build dnsmasq docker-compose
     - basic install
     - build AVR address script for dnsmasq config
   - build nginx docker-compose
     - create site proxy for AVR services/systems
   - build php docker-compose
     - build splash page
   - build gitlab docker-compose
   - build elastic stack docker-compose
     - figure out indexes/queries/dashboards to set up
   - build terraform docker-compose
   - build ansible docker compose
   - build portainer docker-compose
   - build samba docker-compose
 - outline ansible common tasks(port from salt)
 - outline virtual environment config structure
 - build virtual environment automation scripts
 
 WORKSTATION SYSTEM REQUIREMENTS
 - VMWare Workstation
 - PuTTy
 - git
 - PowerCLI
 - 
 
 
 
 
 
 
VIRTUAL RANGE CONTROLLER COMPONENTS:
- PhotonOS -- docker host
- DNSMasq -- local DNS
- nginx -- web proxy/hosting
- php -- web
- gitlab -- devops
- elastic stack -- monitoring
- terraform -- virtual environment management
- ansible -- host management
- portainer -- container management
- samba -- share

VE BUILD FLOW:
- get vmware virtual network settings
- update virtual range settings
- build virtual range controller
- build virtualization environment
- migrate vrc to ve
- upload images to ve
- build template VMs in ve
- 



 
 
 Virtual Environments:
 - AWS -- https://github.com/localstack/localstack
 - vSphere -- https://www.vmware.com/products/vsphere.html
 - Proxmox VE -- https://www.proxmox.com/en/proxmox-ve
 - openstack -- https://www.openstack.org/
 
 
 Directory Structure:
 AVR\
     _temp\    // temporary files generated during build and deploy
     build\    // files used for virtual environment and virtual range controller build
         docker\    // docker files for build of virtual range controller
         packer\    // packer files for virtual environment build 
             http\
             templates\
         virtual_machines\
     config\    // config files used for build and deploy
         keys\
         scenario\
             current_scenario.json
         virtual_environment\
             profiles\    // existing virtual environment configs
             templates\    // virtual environment config templates
                 aws.json
                 proxmox.json
                 openstack.json
                 vsphere.json
             current_environment.json
         virtual_range_controller\   // files used to configure vrc containers
             ansible\
             dnsmasq\
             elastic\
             gitlab\
             nginx\
             php\
             portainer\
             samba\
             terraform\
             vrc_config.json
         images.json    // paths to images and if they should be uploaded
         images-local.json    // local version in gitignore with personal keys and paths (used before images.json)
         paths.json    // custom root paths for images, software,etc
         paths-local.json    // local version in gitignore with personal root paths (used before paths.json)
         software.json    // software to upload
         templates.json    // templates to create in virtual environment
         templates-local.json    // local version in gitignore with templates to build (used before templates.json)
     deploy\    // files used to deploy scenarios (template configs)
          ansible\    // static and template ansible configs (example structure)
             inventories\
                 production\
                     hosts
                     group_vars\
                     host_vars\
                 staging\
                     hosts
                     group_vars\
                     host_vars\
             library\
                 module_utils\
                 filter_plugins\
             roles\
                 common\
                     tasks\
                     handlers\
                     templates\
                     files\
                     vars\
                     defaults\
                     meta\
                     library\
                     module_utils\
                     lookup_plugins\
         terraform\
     library\  
         files\    // files not fitting other categories
         images\    // OS ISOs and other images
         scripts\    // automated virtual range scripts
         software\
             chocolatey\
     scenarios\    // virtual environment independant scenario configs
         _template\
             ansible\
                 groups\
                 roles\
             computers\
                 wks-001.json
             domains\
             routers\
             networks\
             packages\
             gpo\
             groups\
             users\
             ous\
     Build-VirtualEnvironment.ps1    // builds local virtual environment
     Configure-VirtualEnvironment.ps1    // sets up virtual environment so scenarios can be deployed
     Deploy-Scenario.ps1    // deploys a scenario to a specified virtual environment
     
     
        
Build-VirtualEnvironment.ps1 -VE "vsphere"
Configure-VirtualEnvironment.ps1 -VE "remote_aws_main"
Deploy-Scenario.ps1 -VE "local_aws" -Scenario "example"
 
 
BUILD DOCKER IMAGE FOR ANSIBLE
https://docs.ansible.com/ansible-core/devel/installation_guide/intro_installatiohttps://docs.ansible.com/ansible/2.9/installation_guide/intro_installation.html
https://docs.ansible.com/ansible/2.9/user_guide/windows_winrm.html

TODO:
- look up ports to expose
- additional requirements (python packages)

python pip
sudo apt-get update
sudo apt-get install python3
sudo apt-get install python3-pip

pip3 install --upgrade pip
pip3 install --upgrade virtualenv
pip3 install pywinrm

python3 -m pip install ansible






 
